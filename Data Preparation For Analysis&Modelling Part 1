=====================================================
Data Preparation Steps For Analysis USING R & RStudio
AUTHOR:Asutosh Dash
October 1, 2015
=====================================================


Importing Data To R,RStudio
options(repos = c(CRAN = "http://cran.rstudio.com"))
#I am Using a customer data set with 10000 observations and 14 variables
#dir <- choose.dir()
#setwd(dir)
#getwd()
cust_dat <- read.csv(choose.files())



Understanding The Data & Different Attributes
View(cust_dat)#view DataSet
head(cust_dat)
##   Customer.ID Gender first.Date First_region First_state       First_city
## 1   129609144      M   20130130         West     Gujarat            Surat
## 2   129627580      M   20130129        North       Delhi            Delhi
## 3   130363481      M   20130221         West     Gujarat            Surat
## 4    49817480      M   20130222         West Maharashtra Pimpri-Chinchwad
## 5   126343829      F   20130301        North       Delhi            Delhi
## 6     8223758      F   20130314         West     Gujarat            Surat
##   recent.date Last_region  Last_state        Last_city Customer.Value
## 1    20130216        West     Gujarat            Surat         2032.0
## 2    20130129       North       Delhi            Delhi         1709.0
## 3    20130221        West     Gujarat            Surat          523.0
## 4    20130222        West Maharashtra Pimpri-Chinchwad         5132.0
## 5    20130301       North       Delhi            Delhi         1008.0
## 6    20130314        West     Gujarat            Surat         2606.9
##   buy.times Points.earned Points.redeemed
## 1         2           200               0
## 2         1           100               0
## 3         1            10               0
## 4         1           170               0
## 5         1            60               0
## 6         1          1140               0


tail(cust_dat)
##       Customer.ID Gender first.Date First_region   First_state First_city
## 9995     73876936      M   20120205         West       Gujarat      Surat
## 9996     50093138      M   20120208        North Uttar Pradesh       Agra
## 9997     92763145      M   20120209        South     Telangana  Hyderabad
## 9998     73839417      M   20120210        South     Karnataka  Bangalore
## 9999     69606859      M   20120215        North Uttar Pradesh    Lucknow
## 10000   113292109      M   20120217         West   Maharashtra     Mumbai
##       recent.date Last_region    Last_state Last_city Customer.Value
## 9995     20130218        West       Gujarat     Surat       8059.599
## 9996     20121114       North Uttar Pradesh      Agra      13818.600
## 9997     20130319       South     Telangana Hyderabad      13016.500
## 9998     20130216       South     Karnataka Bangalore      44057.900
## 9999     20120215       North Uttar Pradesh   Lucknow       1116.000
## 10000    20120217        West   Maharashtra    Mumbai       1222.000
##       buy.times Points.earned Points.redeemed
## 9995          5           647               0
## 9996          7          1195            1800
## 9997          7           870               0
## 9998         11          2242             585
## 9999          1             0             310
## 10000         1            60               0


str(cust_dat)#get the structure of DataSet and Variables
## 'data.frame':    10000 obs. of  14 variables:
##  $ Customer.ID    : int  129609144 129627580 130363481 49817480 126343829 8223758 131816709 118543320 131365512 758571 ...
##  $ Gender         : Factor w/ 4 levels "","F","M","unknown": 3 3 3 3 2 2 3 2 3 3 ...
##  $ first.Date     : int  20130130 20130129 20130221 20130222 20130301 20130314 20130318 20130321 20130323 20130324 ...
##  $ First_region   : Factor w/ 5 levels "","East","North",..: 5 3 5 5 3 5 4 3 2 4 ...
##  $ First_state    : Factor w/ 23 levels "","Andhra Pradesh",..: 8 7 8 14 7 8 2 21 23 11 ...
##  $ First_city     : Factor w/ 103 levels "Agartala","Agra",..: 94 29 94 81 29 94 103 54 55 11 ...
##  $ recent.date    : int  20130216 20130129 20130221 20130222 20130301 20130314 20130318 20130321 20130331 20130325 ...
##  $ Last_region    : Factor w/ 4 levels "East","North",..: 4 2 4 4 2 4 3 2 1 4 ...
##  $ Last_state     : Factor w/ 24 levels "Andhra Pradesh",..: 7 6 7 14 6 7 1 22 24 14 ...
##  $ Last_city      : Factor w/ 116 levels "Agartala","Agra",..: 102 28 102 84 28 102 114 50 57 103 ...
##  $ Customer.Value : num  2032 1709 523 5132 1008 ...
##  $ buy.times      : int  2 1 1 1 1 1 1 1 2 3 ...
##  $ Points.earned  : int  200 100 10 170 60 1140 79 360 190 145 ...
##  $ Points.redeemed: int  0 0 0 0 0 0 0 0 0 0 ...


names(cust_dat)#get the names of Variables in dataset
##  [1] "Customer.ID"     "Gender"          "first.Date"     
##  [4] "First_region"    "First_state"     "First_city"     
##  [7] "recent.date"     "Last_region"     "Last_state"     
## [10] "Last_city"       "Customer.Value"  "buy.times"      
## [13] "Points.earned"   "Points.redeemed"


nrow(cust_dat)#number of rows
## [1] 10000

ncol(cust_dat)#number of columns
## [1] 14


summary(cust_dat)#summary of dataset
##   Customer.ID            Gender       first.Date       First_region
##  Min.   :      585          :  14   Min.   :20120101        :  21  
##  1st Qu.: 36173533   F      :1806   1st Qu.:20120229   East : 632  
##  Median :114693304   M      :6074   Median :20120703   North:2914  
##  Mean   : 83479036   unknown:2106   Mean   :20121991   South:1846  
##  3rd Qu.:121623430                  3rd Qu.:20121112   West :4587  
##  Max.   :132473524                  Max.   :20130331               
##                                                                    
##         First_state       First_city    recent.date       Last_region 
##  Gujarat      :3360   Surat    :2110   Min.   :20120101   East : 646  
##  Maharashtra  :1225   Delhi    :1042   1st Qu.:20120815   North:2958  
##  Uttar Pradesh:1120   Kanpur   : 847   Median :20121225   South:1807  
##  Delhi        :1039   Chennai  : 653   Mean   :20125367   West :4589  
##  Tamil Nadu   : 676   Bangalore: 631   3rd Qu.:20130304               
##  Karnataka    : 647   Ahmedabad: 629   Max.   :20130331               
##  (Other)      :1933   (Other)  :4088                                  
##          Last_state       Last_city    Customer.Value      buy.times      
##  Gujarat      :3378   Surat    :2127   Min.   :      0   Min.   :  1.000  
##  Maharashtra  :1211   Delhi    :1034   1st Qu.:   1484   1st Qu.:  1.000  
##  Uttar Pradesh:1167   Kanpur   : 854   Median :   3960   Median :  2.000  
##  Delhi        :1037   Bangalore: 631   Mean   :  12545   Mean   :  5.478  
##  Karnataka    : 645   Ahmedabad: 621   3rd Qu.:  11136   3rd Qu.:  6.000  
##  Tamil Nadu   : 621   Chennai  : 592   Max.   :5098715   Max.   :586.000  
##  (Other)      :1941   (Other)  :4141   NA's   :36                         
##  Points.earned      Points.redeemed    
##  Min.   :     0.0   Min.   :      0.0  
##  1st Qu.:    65.0   1st Qu.:      0.0  
##  Median :   195.0   Median :      0.0  
##  Mean   :   529.4   Mean   :    582.2  
##  3rd Qu.:   535.0   3rd Qu.:      0.0  
##  Max.   :142030.0   Max.   :1387520.0  
##  NA's   :21         NA's   :12


sum(duplicated(cust_dat))#If duplicates exist in dataset
## [1] 27


uni_dat <- unique(cust_dat)#unique observations in the dataset


#install.packages("psych")
require(psych)
## Loading required package: psych
describe(cust_dat)#More summary for dataset
##                 vars     n        mean          sd    median     trimmed
## Customer.ID        1 10000 83479035.61 48025286.18 114693305 87759326.08
## Gender*            2 10000        3.03        0.63         3        3.04
## first.Date         3 10000 20121990.69     3424.37  20120703 20121193.72
## First_region*      4 10000        4.03        1.01         4        4.13
## First_state*       5 10000       12.61        5.59        11       12.25
## First_city*        6 10000       56.17       31.40        54       57.29
## recent.date        7 10000 20125367.42     4744.99  20121225 20125391.13
## Last_region*       8 10000        3.03        1.01         3        3.12
## Last_state*        9 10000       12.47        6.43        11       12.06
## Last_city*        10 10000       58.62       34.94        50       59.18
## Customer.Value    11  9964    12544.89    65467.71      3960     6411.95
## buy.times         12 10000        5.48       11.68         2        3.48
## Points.earned     13  9979      529.36     1861.32       195      301.91
## Points.redeemed   14  9988      582.21    15212.78         0        3.42
##                         mad      min       max     range  skew kurtosis
## Customer.ID     22484316.93      585 132473524 132472939 -0.72    -1.16
## Gender*                0.00        1         4         3 -0.05    -0.37
## first.Date           606.38 20120101  20130331     10230  1.95     1.90
## First_region*          1.48        1         5         4 -0.49    -1.09
## First_state*           4.45        1        23        22  0.45    -1.10
## First_city*           41.51        1       103       102 -0.12    -1.30
## recent.date         1651.62 20120101  20130331     10230  0.05    -1.98
## Last_region*           1.48        1         4         3 -0.45    -1.20
## Last_state*            5.93        1        24        23  0.44    -1.23
## Last_city*            38.55        1       116       115  0.03    -1.34
## Customer.Value      4326.89        0   5098715   5098715 54.36  3867.34
## buy.times              1.48        1       586       585 21.77   864.40
## Points.earned        237.22        0    142030    142030 48.00  3417.94
## Points.redeemed        0.00        0   1387520   1387520 80.17  7054.04
##                        se
## Customer.ID     480252.86
## Gender*              0.01
## first.Date          34.24
## First_region*        0.01
## First_state*         0.06
## First_city*          0.31
## recent.date         47.45
## Last_region*         0.01
## Last_state*          0.06
## Last_city*           0.35
## Customer.Value     655.86
## buy.times            0.12
## Points.earned       18.63
## Points.redeemed    152.22


describeData(cust_dat)
## n.obs =  10000 of which  9936   are complete cases.   Number of variables =  14  of which all are numeric  TRUE  
##                 variable # n.obs type        H1        H2        H3
## Customer.ID              1 10000    1 129609144 129627580 130363481
## Gender*                  2 10000    2         M         M         M
## first.Date               3 10000    1  20130130  20130129  20130221
## First_region*            4 10000    2      West     North      West
## First_state*             5 10000    2   Gujarat     Delhi   Gujarat
## First_city*              6 10000    2     Surat     Delhi     Surat
## recent.date              7 10000    1  20130216  20130129  20130221
## Last_region*             8 10000    2      West     North      West
## Last_state*              9 10000    2   Gujarat     Delhi   Gujarat
## Last_city*              10 10000    2     Surat     Delhi     Surat
## Customer.Value          11  9964    1      2032      1709       523
## buy.times               12 10000    1         2         1         1
## Points.earned           13  9979    1       200       100        10
## Points.redeemed         14  9988    1         0         0         0
##                               H4        T1        T2            T3
## Customer.ID             49817480  92763145  73839417      69606859
## Gender*                        M         M         M             M
## first.Date              20130222  20120209  20120210      20120215
## First_region*               West     South     South         North
## First_state*         Maharashtra Telangana Karnataka Uttar Pradesh
## First_city*     Pimpri-Chinchwad Hyderabad Bangalore       Lucknow
## recent.date             20130222  20130319  20130216      20120215
## Last_region*                West     South     South         North
## Last_state*          Maharashtra Telangana Karnataka Uttar Pradesh
## Last_city*      Pimpri-Chinchwad Hyderabad Bangalore       Lucknow
## Customer.Value              5132   13016.5   44057.9        1116.0
## buy.times                      1         7        11             1
## Points.earned                170       870      2242             0
## Points.redeemed                0         0       585           310
##                          T4
## Customer.ID       113292109
## Gender*                   M
## first.Date         20120217
## First_region*          West
## First_state*    Maharashtra
## First_city*          Mumbai
## recent.date        20120217
## Last_region*           West
## Last_state*     Maharashtra
## Last_city*           Mumbai
## Customer.Value       1222.0
## buy.times                 1
## Points.earned            60
## Points.redeemed           0



Finding Missing Values in Dataset
#Using user defined function
for(i in names(cust_dat)){
  miss <- sum(is.na(cust_dat[,i]))
  if(miss > 0){
    print(c(i,miss))
  }
}
## [1] "Customer.Value" "36"            
## [1] "Points.earned" "21"           
## [1] "Points.redeemed" "12"


#Percentage of Missings without functions
noMiss <- sum(is.na(cust_dat))
total <- prod(dim(cust_dat))
perMiss <- (noMiss/total) * 100



#percent of Missings(another way)
Value_missing_pct<-sum(is.na(cust_dat$Customer.Value ))*100/length(cust_dat$Customer.Value )#percent miss for specific variable

perMissing <- apply(cust_dat, 2, function(x)
  sum(is.na(x))*100/length(x))#percent missing for all columns using apply
perMissing
##     Customer.ID          Gender      first.Date    First_region 
##            0.00            0.00            0.00            0.00 
##     First_state      First_city     recent.date     Last_region 
##            0.00            0.00            0.00            0.00 
##      Last_state       Last_city  Customer.Value       buy.times 
##            0.00            0.00            0.36            0.00 
##   Points.earned Points.redeemed 
##            0.21            0.12


perMissing1 <- sapply(cust_dat, function(x)
  sum(is.na(x))*100/length(x))#same using Sapply
perMissing1
##     Customer.ID          Gender      first.Date    First_region 
##            0.00            0.00            0.00            0.00 
##     First_state      First_city     recent.date     Last_region 
##            0.00            0.00            0.00            0.00 
##      Last_state       Last_city  Customer.Value       buy.times 
##            0.00            0.00            0.36            0.00 
##   Points.earned Points.redeemed 
##            0.21            0.12


#Using Pre-defined Functions
sapply(cust_dat, function(x) sum(is.na(x)))
##     Customer.ID          Gender      first.Date    First_region 
##               0               0               0               0 
##     First_state      First_city     recent.date     Last_region 
##               0               0               0               0 
##      Last_state       Last_city  Customer.Value       buy.times 
##               0               0              36               0 
##   Points.earned Points.redeemed 
##              21              12


sapply(cust_dat, function(x)all(!is.na(x)))#columns/variables having missings
##     Customer.ID          Gender      first.Date    First_region 
##            TRUE            TRUE            TRUE            TRUE 
##     First_state      First_city     recent.date     Last_region 
##            TRUE            TRUE            TRUE            TRUE 
##      Last_state       Last_city  Customer.Value       buy.times 
##            TRUE            TRUE           FALSE            TRUE 
##   Points.earned Points.redeemed 
##           FALSE           FALSE


M <- sapply(cust_dat, function(x) sum(is.na(x)));M[M>0]#only show colums/variables with missing values
##  Customer.Value   Points.earned Points.redeemed 
##              36              21              12


#using apply
apply(is.na(cust_dat), 2, sum)
##     Customer.ID          Gender      first.Date    First_region 
##               0               0               0               0 
##     First_state      First_city     recent.date     Last_region 
##               0               0               0               0 
##      Last_state       Last_city  Customer.Value       buy.times 
##               0               0              36               0 
##   Points.earned Points.redeemed 
##              21              12


#using colsums
colSums(is.na(cust_dat))
##     Customer.ID          Gender      first.Date    First_region 
##               0               0               0               0 
##     First_state      First_city     recent.date     Last_region 
##               0               0               0               0 
##      Last_state       Last_city  Customer.Value       buy.times 
##               0               0              36               0 
##   Points.earned Points.redeemed 
##              21              12


#listing rows of data with missing values
cust_dat[!complete.cases(cust_dat),]
##     Customer.ID  Gender first.Date First_region    First_state
## 193   132456295       M   20130330              Andhra Pradesh
## 194    50354197       M   20120101                       Delhi
## 195    85393261       M   20120101                     Gujarat
## 196      447949       M   20120102                       Delhi
## 197    85566519       M   20120103                 West Bengal
## 198     9176795       M   20120103                     Gujarat
## 199    84279123       F   20120104                 West Bengal
## 200    65529409           20120105                 West Bengal
## 201    50083707           20120106               Uttar Pradesh
## 202     8397110           20120108                 Maharashtra
## 203    86059740           20120109               Uttar Pradesh
## 204    72303583           20120113                 Maharashtra
## 205    86010913           20120110                   Karnataka
## 206     7566831           20120111                     Gujarat
## 207    63788247           20120111                   Karnataka
## 208     9500045           20120112                 Maharashtra
## 209     5099393           20120116                      Punjab
## 210    88052493           20120114               Uttar Pradesh
## 211    10121652           20120115         West        Gujarat
## 212      480848           20120115        North Madhya Pradesh
## 213    12617541           20120116        North          Delhi
## 214     9364546       F   20120116        South     Tamil Nadu
## 215    72645347       M   20120119        North  Uttar Pradesh
## 216     6635095       F   20120126        South      Telangana
## 217    87032325       M   20120126        South     Tamil Nadu
## 218     1928337 unknown   20120129        North  Uttar Pradesh
## 219      794451       F   20120130         West        Gujarat
## 220    85435342       M   20120129         West        Gujarat
## 221    35922025       M   20120201         West    Maharashtra
## 222    69862541       M   20120202         West               
## 223     6425982       M   20120202         West               
## 224    85615840       M   20120202         West               
## 225     9039363       M   20120207         West               
## 226    91313329       F   20120207         West               
## 227      668690       M   20120208        North               
## 228    66386909       M   20120210        North               
## 229    74117158       F   20120217         East               
## 230    14839806       M   20120225         West               
## 231   113937879       M   20120227         West               
## 232     6851776       M   20120304         West               
## 233    74062770       M   20120310        South               
## 234   114552989       M   20120310        North               
## 235    50065279       M   20120311        North               
## 236     2679949       M   20120312         West               
## 237   114637791       M   20120312        North               
## 238    58187785       M   20120317        South               
## 239     7248775       M   20120323        South      Telangana
## 240    92750741       M   20120323        North          Delhi
## 241   115208634       F   20120325        North  Uttar Pradesh
## 242      823833       M   20120328         West        Gujarat
## 243    63657401       M   20120329        North      Rajasthan
## 244   115434449 unknown   20120401        North          Delhi
## 245     7885583       M   20120405        North          Delhi
## 246    63660968       M   20120407         West    Maharashtra
## 247    63662061       M   20120408         West    Maharashtra
## 248   115173757 unknown   20120409         West        Gujarat
## 249   115416042 unknown   20120412         West        Gujarat
## 250      759085       M   20120421         West        Gujarat
## 251   115857532 unknown   20120423        North Madhya Pradesh
## 252     5775197       F   20120423         West        Gujarat
## 253   115641000       M   20120425         East    West Bengal
## 254   113790514       M   20120427         West        Gujarat
## 255    84437996       M   20120429         West        Gujarat
## 256   116516231       M   20120507        North      Rajasthan
##        First_city recent.date Last_region     Last_state        Last_city
## 193 Visakhapatnam    20130330       South Andhra Pradesh    Visakhapatnam
## 194         Delhi    20130307       North          Delhi            Delhi
## 195      Vadodara    20130127        West        Gujarat         Vadodara
## 196         Delhi    20130317       North          Delhi            Delhi
## 197       Kolkata    20120103        East    West Bengal          Kolkata
## 198        Rajkot    20130322        West        Gujarat         Vadodara
## 199       Kolkata    20130325        East    West Bengal          Kolkata
## 200       Kolkata    20130217        East    West Bengal          Kolkata
## 201        Kanpur    20130315       North  Uttar Pradesh           Kanpur
## 202        Mumbai    20130327       South      Karnataka        Bangalore
## 203        Kanpur    20130224        West        Gujarat            Surat
## 204        Mumbai    20120704       North  Uttar Pradesh             Loni
## 205     Bangalore    20120110       South      Karnataka        Bangalore
## 206         Surat    20130314        West        Gujarat            Surat
## 207     Bangalore    20121219        West    Maharashtra           Nagpur
## 208        Mumbai    20130220       South     Tamil Nadu          Chennai
## 209       Patiala    20130113        West        Gujarat            Surat
## 210        Kanpur    20121125       North          Delhi            Delhi
## 211         Surat    20130301        West        Gujarat            Surat
## 212        Bhopal    20120729        West        Gujarat            Surat
## 213         Delhi    20120924        West        Gujarat            Surat
## 214       Chennai    20121217       South     Tamil Nadu          Chennai
## 215        Kanpur    20120119       North  Uttar Pradesh           Kanpur
## 216     Hyderabad    20130221       South      Telangana        Hyderabad
## 217       Chennai    20120131       South     Tamil Nadu          Chennai
## 218        Kanpur    20130312       North  Uttar Pradesh           Kanpur
## 219         Surat    20130220        West        Gujarat            Surat
## 220     Ahmedabad    20130216        West        Gujarat        Ahmedabad
## 221        Nashik    20120509       North          Delhi            Delhi
## 222     Ahmedabad    20120824        West        Gujarat        Ahmedabad
## 223        Nagpur    20120202        West    Maharashtra           Nagpur
## 224        Mumbai    20120308       North  Uttar Pradesh           Kanpur
## 225     Ahmedabad    20121121        West        Gujarat        Ahmedabad
## 226     Ahmedabad    20120207        West        Gujarat        Ahmedabad
## 227         Delhi    20121215       North          Delhi            Delhi
## 228        Kanpur    20120210       North  Uttar Pradesh           Kanpur
## 229       Kolkata    20130311        East    West Bengal          Kolkata
## 230         Surat    20121009       North          Delhi            Delhi
## 231         Surat    20120227        West        Gujarat            Surat
## 232      Vadodara    20120304        West        Gujarat         Vadodara
## 233       Chennai    20130329       South     Tamil Nadu          Chennai
## 234        Kanpur    20120505       North  Uttar Pradesh           Kanpur
## 235         Delhi    20130228        West    Maharashtra Pimpri-Chinchwad
## 236        Mumbai    20120506       South     Tamil Nadu          Chennai
## 237         Delhi    20120321       North          Delhi            Delhi
## 238       Chennai    20130131       South     Tamil Nadu          Chennai
## 239     Hyderabad    20120412       North          Delhi            Delhi
## 240         Delhi    20120422       North  Uttar Pradesh        Ghaziabad
## 241        Kanpur    20120727       North  Uttar Pradesh           Kanpur
## 242         Surat    20130321       South      Karnataka        Bangalore
## 243        Jaipur    20120329       North      Rajasthan           Jaipur
## 244         Delhi    20130324       North          Delhi            Delhi
## 245         Delhi    20130327       North          Delhi            Delhi
## 246   Vasai-Virar    20120425        West    Maharashtra           Nagpur
## 247        Nagpur    20120421        West    Maharashtra           Nagpur
## 248         Surat    20130315        West        Gujarat            Surat
## 249         Surat    20120412        West        Gujarat            Surat
## 250      Vadodara    20130127        West        Gujarat         Vadodara
## 251        Indore    20130119       North Madhya Pradesh           Indore
## 252      Vadodara    20130223        West        Gujarat         Vadodara
## 253       Kolkata    20120425        East    West Bengal          Kolkata
## 254         Surat    20121229        West        Gujarat            Surat
## 255         Surat    20120429        West        Gujarat            Surat
## 256        Jaipur    20121101       North      Rajasthan           Jaipur
##     Customer.Value buy.times Points.earned Points.redeemed
## 193          944.0         1            NA               0
## 194        16407.5         6            NA              80
## 195         4941.0         2            NA               0
## 196        48445.4        28            NA               0
## 197         1832.0         1            NA               0
## 198        22411.0        17            NA               0
## 199        36312.6        29            NA            1885
## 200        25100.3        12            NA               0
## 201        68145.3        34            NA            6700
## 202       108189.6        63            NA               0
## 203         6963.0         4            NA               0
## 204         1758.0         2            NA             540
## 205          860.6         1            NA               0
## 206         8538.0         6            NA             480
## 207         7615.5         5            NA               0
## 208         8355.2         6            NA             870
## 209        18039.6         9            NA               0
## 210        14169.2         7            NA               0
## 211        32624.0        21            NA               0
## 212         6841.8         3            NA               0
## 213         6414.0         8            NA               0
## 214             NA         7          1100            3650
## 215             NA         1            30             560
## 216             NA         3           354               0
## 217             NA         1             0               0
## 218             NA         9           964               0
## 219             NA        12          1275               0
## 220             NA        10           955               0
## 221             NA         6           718             303
## 222             NA         2             0             300
## 223             NA         1            45               0
## 224             NA         4            20               0
## 225             NA         2           170               0
## 226             NA         1            65               0
## 227             NA         3           395               0
## 228             NA         1            40             810
## 229             NA        10           833               0
## 230             NA         3           920               0
## 231             NA         1            32               0
## 232             NA         1            90               0
## 233             NA        14          2118               0
## 234             NA         3           270               0
## 235             NA         9           810               0
## 236             NA         2           405               0
## 237             NA         2           110               0
## 238             NA        24          1813               0
## 239             NA         2           191               0
## 240             NA         4             5               0
## 241             NA         2           205               0
## 242             NA        13          1506               0
## 243             NA         1           189              11
## 244             NA        25          5113               0
## 245             NA        12           982              NA
## 246             NA         2            40              NA
## 247             NA         2            20              NA
## 248             NA        10           603              NA
## 249             NA         1            10              NA
## 250        11998.2         5           429              NA
## 251        34809.6        19          2219              NA
## 252         6461.2         3           220              NA
## 253          865.0         1            55              NA
## 254         6598.0         3           405              NA
## 255        28880.0         1           210              NA
## 256         2002.0         2           115              NA


#to find the columns with  all values missing
allmisscols <- apply(cust_dat, 2, function(x)all(is.na(x)))
colwithallmiss <- names(allmisscols[allmisscols>0])
print("the columns with all values missing are")
## [1] "the columns with all values missing are"
print(colwithallmiss)
## character(0)


#some other ways
#to find missing in whole data frame
sum(is.na(cust_dat))/prod(dim(cust_dat))
## [1] 0.0004928571


#percnetmiss <- (sum(is.na(cust_dat))/prod(dim(cust_dat)))*100
#or
mean(is.na(cust_dat))
## [1] 0.0004928571

#to find missing data for columns
colMeans(is.na(cust_dat))
##     Customer.ID          Gender      first.Date    First_region 
##          0.0000          0.0000          0.0000          0.0000 
##     First_state      First_city     recent.date     Last_region 
##          0.0000          0.0000          0.0000          0.0000 
##      Last_state       Last_city  Customer.Value       buy.times 
##          0.0000          0.0000          0.0036          0.0000 
##   Points.earned Points.redeemed 
##          0.0021          0.0012


#percentage of missing in customer.value
sum(is.na(cust_dat$Customer.Value))/length(cust_dat$Customer.Value)
## [1] 0.0036
#with count.na
#install.packages("ares")
#count.na(cust_dat)
#using function
tblfun <- function(x){
  tbl <- table(x)
  res <- cbind(tbl,round(prop.table(tbl)*100,2))
  colnames(res) <- c("count","percentage")
  res
}
miss_df <- do.call(rbind,lapply(cust_dat[1:ncol(cust_dat),], tblfun))
View(miss_df)


Creating data subsets of missings
#new data set with all missing data
misdat <- cust_dat[!complete.cases(cust_dat),]
View(misdat)

#new data without missing data
newdat <- na.omit(cust_dat)
View(newdat)

#another way
dups<-cust_dat[duplicated(cust_dat),]#duplicates
View(dups)
str(dups)
## 'data.frame':    27 obs. of  14 variables:
##  $ Customer.ID    : int  88092811 84750517 5686217 63669926 90964885 87989417 6005239 91066310 414338 9144258 ...
##  $ Gender         : Factor w/ 4 levels "","F","M","unknown": 3 2 3 3 3 3 3 3 3 3 ...
##  $ first.Date     : int  20120116 20120119 20120118 20120118 20120121 20120127 20120129 20120130 20120131 20120130 ...
##  $ First_region   : Factor w/ 5 levels "","East","North",..: 5 5 5 4 5 5 2 5 5 4 ...
##  $ First_state    : Factor w/ 23 levels "","Andhra Pradesh",..: 8 8 14 19 8 8 23 8 8 18 ...
##  $ First_city     : Factor w/ 103 levels "Agartala","Agra",..: 94 94 95 45 94 94 55 94 94 26 ...
##  $ recent.date    : int  20130222 20130319 20120524 20130114 20120121 20120127 20121127 20130312 20120131 20130313 ...
##  $ Last_region    : Factor w/ 4 levels "East","North",..: 4 4 4 3 4 4 3 4 4 4 ...
##  $ Last_state     : Factor w/ 24 levels "Andhra Pradesh",..: 7 7 7 20 7 7 20 7 7 14 ...
##  $ Last_city      : Factor w/ 116 levels "Agartala","Agra",..: 102 102 102 43 102 102 43 102 102 71 ...
##  $ Customer.Value : num  14787 20697 16858 12863 198 ...
##  $ buy.times      : int  12 11 11 4 1 1 6 10 1 23 ...
##  $ Points.earned  : int  337 1935 915 1030 0 50 600 475 0 4441 ...
##  $ Points.redeemed: int  300 0 0 0 0 0 0 0 0 0 ...
unique <- unique(cust_dat)#unique
#View(unique)
str(unique)
## 'data.frame':    9973 obs. of  14 variables:
##  $ Customer.ID    : int  129609144 129627580 130363481 49817480 126343829 8223758 131816709 118543320 131365512 758571 ...
##  $ Gender         : Factor w/ 4 levels "","F","M","unknown": 3 3 3 3 2 2 3 2 3 3 ...
##  $ first.Date     : int  20130130 20130129 20130221 20130222 20130301 20130314 20130318 20130321 20130323 20130324 ...
##  $ First_region   : Factor w/ 5 levels "","East","North",..: 5 3 5 5 3 5 4 3 2 4 ...
##  $ First_state    : Factor w/ 23 levels "","Andhra Pradesh",..: 8 7 8 14 7 8 2 21 23 11 ...
##  $ First_city     : Factor w/ 103 levels "Agartala","Agra",..: 94 29 94 81 29 94 103 54 55 11 ...
##  $ recent.date    : int  20130216 20130129 20130221 20130222 20130301 20130314 20130318 20130321 20130331 20130325 ...
##  $ Last_region    : Factor w/ 4 levels "East","North",..: 4 2 4 4 2 4 3 2 1 4 ...
##  $ Last_state     : Factor w/ 24 levels "Andhra Pradesh",..: 7 6 7 14 6 7 1 22 24 14 ...
##  $ Last_city      : Factor w/ 116 levels "Agartala","Agra",..: 102 28 102 84 28 102 114 50 57 103 ...
##  $ Customer.Value : num  2032 1709 523 5132 1008 ...
##  $ buy.times      : int  2 1 1 1 1 1 1 1 2 3 ...
##  $ Points.earned  : int  200 100 10 170 60 1140 79 360 190 145 ...
##  $ Points.redeemed: int  0 0 0 0 0 0 0 0 0 0 ...


Some more ways for getting duplicates and unique in dataset in more details
#using duplicated function to find unique combinations
dat.uni <- cust_dat[!duplicated(cust_dat),]
View(dat.uni)
dat.dupes <- cust_dat[duplicated(cust_dat),]
View(dat.dupes)


#checking in both directions to get only duplicates
dat.duplicates <- cust_dat[duplicated(cust_dat[1:nrow(cust_dat),]) | duplicated(cust_dat[1:nrow(cust_dat),],fromLast = TRUE),]
View(dat.duplicates)


#using unique 
dat.unique <- unique(cust_dat)
View(dat.unique)


#no of duplicates 
dim(cust_dat[duplicated(cust_dat$Customer.ID),])[1]
## [1] 45

#cust_dat[!duplicated(lapply(cust_dat, c))]
#summary will summarize the distribution while ignoring the order
#using digest:for larger datasets
#install.packages("digest")
require(digest)
## Loading required package: digest

#cust_dat[!duplicated(lapply(cust_dat, digest))]

#as.data.frame(unique(as.matrix(cust_dat), MARGIN=2))
#or if dont want to turn numbers into factors
#cust_dat[,colnames(unique(as.matrix(cust_dat), MARGIN=2))]


df <- aggregate(list(numdup=rep(1,nrow(cust_dat))),cust_dat,length)
View(df)

#or even
df1 <- aggregate(numdup~., data = transform(cust_dat,numdup=1), length)
View(df1)

#or
df2 <- cust_dat
repeat.entries <- df2[duplicated(df2),]#show the repeat entries
View(repeat.entries)

#show unique repeat entries
uni.repeat <- unique(cust_dat[duplicated(cust_dat),])
View(uni.repeat)

#no of unique in each column
rapply(cust_dat, function(x)length(unique(x)))
##     Customer.ID          Gender      first.Date    First_region 
##            9955               4             452               5 
##     First_state      First_city     recent.date     Last_region 
##              23             103             452               4 
##      Last_state       Last_city  Customer.Value       buy.times 
##              24             116            7857              84 
##   Points.earned Points.redeemed 
##            1653             787
#using lapply
df3 <- lapply(cust_dat, function(x) length(table(x)))
View(df3)

#using sapply
df4 <- sapply(cust_dat, function(x) length(unique(x)))
df4
##     Customer.ID          Gender      first.Date    First_region 
##            9955               4             452               5 
##     First_state      First_city     recent.date     Last_region 
##              23             103             452               4 
##      Last_state       Last_city  Customer.Value       buy.times 
##              24             116            7857              84 
##   Points.earned Points.redeemed 
##            1653             787
#using sqldf
#install.packages("sqldf")
require(sqldf)
## Loading required package: sqldf
## Loading required package: gsubfn
## Loading required package: proto
## Loading required package: RSQLite
## Loading required package: DBI
sqldf("select distinct First_region,First_state from cust_dat")
## Loading required package: tcltk
##    First_region    First_state
## 1          West        Gujarat
## 2         North          Delhi
## 3          West    Maharashtra
## 4         South Andhra Pradesh
## 5         North  Uttar Pradesh
## 6          East    West Bengal
## 7         South      Karnataka
## 8         North      Rajasthan
## 9         North Madhya Pradesh
## 10        South     Tamil Nadu
## 11        South      Telangana
## 12                     Gujarat
## 13               Uttar Pradesh
## 14                 West Bengal
## 15              Andhra Pradesh
## 16                       Delhi
## 17                 Maharashtra
## 18                   Karnataka
## 19                      Punjab
## 20         West               
## 21        North               
## 22         East               
## 23        South               
## 24         East          Bihar
## 25         East          Assam
## 26         East      Jharkhand
## 27         East        Tripura
## 28        North         Orissa
## 29        North   Chhattisgarh
## 30        North        Haryana
## 31        North     Chandigarh
## 32        South         Kerala
## 33        North         Punjab
## 34        North    Uttarakhand
sqldf("select distinct(First_region) from cust_dat")
##   First_region
## 1         West
## 2        North
## 3        South
## 4         East
## 5


Creating subset on Condition
#subset for all customers value greater than 10000
sub_dat <- subset(cust_dat,Customer.Value > 10000)
View(sub_dat)
dim(sub_dat)
## [1] 2723   14
Creating New Variable based on multiple conditions of another variable
cust_dat$customer.Value.Segment <- cut(cust_dat$Customer.Value,
                                    breaks = c(-Inf,10000,25000,Inf),
                                    labels = c("low value segment","Medium value segment","High value segment"))
View(cust_dat)

#method-1:Using transform

cust_dat<-transform(cust_dat, avg_rev_trip = Customer.Value/buy.times, balance_points = Points.earned-Points.redeemed )
names(cust_dat)
##  [1] "Customer.ID"            "Gender"                
##  [3] "first.Date"             "First_region"          
##  [5] "First_state"            "First_city"            
##  [7] "recent.date"            "Last_region"           
##  [9] "Last_state"             "Last_city"             
## [11] "Customer.Value"         "buy.times"             
## [13] "Points.earned"          "Points.redeemed"       
## [15] "customer.Value.Segment" "avg_rev_trip"          
## [17] "balance_points"
#method-2:Using mutate
#install.packages("dplyr")
require(dplyr)
## Loading required package: dplyr
## 
## Attaching package: 'dplyr'
## 
## The following objects are masked from 'package:stats':
## 
##     filter, lag
## 
## The following objects are masked from 'package:base':
## 
##     intersect, setdiff, setequal, union
cust_dat1<-mutate(cust_dat, avg_rev_trip = Customer.Value/buy.times, balance_points = Points.earned-Points.redeemed )
names(cust_dat1)
##  [1] "Customer.ID"            "Gender"                
##  [3] "first.Date"             "First_region"          
##  [5] "First_state"            "First_city"            
##  [7] "recent.date"            "Last_region"           
##  [9] "Last_state"             "Last_city"             
## [11] "Customer.Value"         "buy.times"             
## [13] "Points.earned"          "Points.redeemed"       
## [15] "customer.Value.Segment" "avg_rev_trip"          
## [17] "balance_points"


Getting days between recent activity
cust_dat$inactive.days <- Sys.Date()-as.Date(as.character(cust_dat$recent.date),"%Y%m%d")
str(cust_dat)
## 'data.frame':    10000 obs. of  18 variables:
##  $ Customer.ID           : int  129609144 129627580 130363481 49817480 126343829 8223758 131816709 118543320 131365512 758571 ...
##  $ Gender                : Factor w/ 4 levels "","F","M","unknown": 3 3 3 3 2 2 3 2 3 3 ...
##  $ first.Date            : int  20130130 20130129 20130221 20130222 20130301 20130314 20130318 20130321 20130323 20130324 ...
##  $ First_region          : Factor w/ 5 levels "","East","North",..: 5 3 5 5 3 5 4 3 2 4 ...
##  $ First_state           : Factor w/ 23 levels "","Andhra Pradesh",..: 8 7 8 14 7 8 2 21 23 11 ...
##  $ First_city            : Factor w/ 103 levels "Agartala","Agra",..: 94 29 94 81 29 94 103 54 55 11 ...
##  $ recent.date           : int  20130216 20130129 20130221 20130222 20130301 20130314 20130318 20130321 20130331 20130325 ...
##  $ Last_region           : Factor w/ 4 levels "East","North",..: 4 2 4 4 2 4 3 2 1 4 ...
##  $ Last_state            : Factor w/ 24 levels "Andhra Pradesh",..: 7 6 7 14 6 7 1 22 24 14 ...
##  $ Last_city             : Factor w/ 116 levels "Agartala","Agra",..: 102 28 102 84 28 102 114 50 57 103 ...
##  $ Customer.Value        : num  2032 1709 523 5132 1008 ...
##  $ buy.times             : int  2 1 1 1 1 1 1 1 2 3 ...
##  $ Points.earned         : int  200 100 10 170 60 1140 79 360 190 145 ...
##  $ Points.redeemed       : int  0 0 0 0 0 0 0 0 0 0 ...
##  $ customer.Value.Segment: Factor w/ 3 levels "low value segment",..: 1 1 1 1 1 1 1 1 1 1 ...
##  $ avg_rev_trip          : num  1016 1709 523 5132 1008 ...
##  $ balance_points        : int  200 100 10 170 60 1140 79 360 190 145 ...
##  $ inactive.days         :Class 'difftime'  atomic [1:10000] 958 976 953 952 945 932 928 925 915 921 ...
##   .. ..- attr(*, "units")= chr "days"
View(cust_dat)
names(cust_dat)
##  [1] "Customer.ID"            "Gender"                
##  [3] "first.Date"             "First_region"          
##  [5] "First_state"            "First_city"            
##  [7] "recent.date"            "Last_region"           
##  [9] "Last_state"             "Last_city"             
## [11] "Customer.Value"         "buy.times"             
## [13] "Points.earned"          "Points.redeemed"       
## [15] "customer.Value.Segment" "avg_rev_trip"          
## [17] "balance_points"         "inactive.days"


Getting proportions by Group
#proportion of CustomerValue by each group
aggregate(cust_dat$Customer.Value, by = list(cust_dat$Last_region, cust_dat$Last_state, cust_dat$Last_city), 
                                  FUN = mean)
##     Group.1           Group.2            Group.3          x
## 1      East           Tripura           Agartala   7843.000
## 2     North     Uttar Pradesh               Agra  25858.739
## 3      West           Gujarat          Ahmedabad         NA
## 4     North     Uttar Pradesh            Aligarh   3541.444
## 5     North     Uttar Pradesh          Allahabad   2791.950
## 6     South        Tamil Nadu           Ambattur   6894.700
## 7      West       Maharashtra          Ambernath   4835.299
## 8      East       West Bengal            Asansol   3794.000
## 9      West       Maharashtra         Aurangabad  24116.075
## 10    South         Karnataka          Bangalore         NA
## 11     East       West Bengal          Baranagar   9970.950
## 12     East       West Bengal            Barasat   5034.895
## 13    North     Uttar Pradesh           Bareilly  11728.333
## 14     East             Bihar          Begusarai  25697.999
## 15     East             Bihar          Bhagalpur   2787.799
## 16    North         Rajasthan          Bharatpur  19876.400
## 17     East       West Bengal           Bhatpara  19856.000
## 18    North         Rajasthan           Bhilwara 108358.900
## 19     West       Maharashtra           Bhiwandi   3898.900
## 20    North    Madhya Pradesh             Bhopal  12883.648
## 21    North            Orissa        Bhubaneswar   9209.901
## 22    North         Rajasthan            Bikaner  19783.898
## 23    North        Chandigarh         Chandigarh   6826.633
## 24    South        Tamil Nadu            Chennai         NA
## 25    North            Orissa            Cuttack  52957.498
## 26    South         Karnataka         Davanagere   5304.799
## 27    North       Uttarakhand           Dehradun   1535.001
## 28    North             Delhi              Delhi         NA
## 29    North    Madhya Pradesh              Dewas   5028.741
## 30     East         Jharkhand            Dhanbad  13711.678
## 31    North     Uttar Pradesh             Etawah  10812.000
## 32    North     Uttar Pradesh          Firozabad  15407.675
## 33     West           Gujarat         Gandhidham   2089.000
## 34    North     Uttar Pradesh          Ghaziabad         NA
## 35    North     Uttar Pradesh          Gorakhpur   5668.700
## 36    South         Karnataka           Gulbarga   4340.999
## 37    South    Andhra Pradesh             Guntur      0.000
## 38    North           Haryana            Gurgaon 157822.500
## 39     East             Assam           Guwahati  64887.960
## 40    North       Uttarakhand           Haridwar  28271.600
## 41     East       West Bengal             Howrah   7417.633
## 42    South         Karnataka   Hubballi-Dharwad   8203.211
## 43    South         Telangana          Hyderabad         NA
## 44     West       Maharashtra       Ichalkaranji  17863.900
## 45    North    Madhya Pradesh             Indore  20037.776
## 46    North    Madhya Pradesh           Jabalpur  28356.888
## 47    North         Rajasthan             Jaipur         NA
## 48     West           Gujarat           Jamnagar  14757.433
## 49     East         Jharkhand         Jamshedpur   3559.999
## 50    North     Uttar Pradesh             Kanpur         NA
## 51    North             Delhi      Karawal Nagar   4893.300
## 52    South         Telangana         Karimnagar   6823.000
## 53    North           Haryana             Karnal   2672.000
## 54     East             Bihar            Katihar  29301.149
## 55    South         Telangana            Khammam    979.000
## 56    South            Kerala              Kochi   4833.400
## 57     East       West Bengal            Kolkata         NA
## 58    South            Kerala             Kollam  28368.502
## 59    North      Chhattisgarh              Korba   2786.400
## 60    South            Kerala          Kozhikode  13892.600
## 61    South    Andhra Pradesh            Kurnool   3113.499
## 62    North     Uttar Pradesh               Loni   5172.280
## 63    North     Uttar Pradesh            Lucknow  10548.547
## 64    North            Punjab           Ludhiana   3677.966
## 65    South        Tamil Nadu            Madurai  10544.264
## 66    North     Uttar Pradesh            Mathura  16631.481
## 67    North     Uttar Pradesh                Mau   7174.200
## 68    North     Uttar Pradesh             Meerut   5770.800
## 69     West       Maharashtra     Mira-Bhayandar 237835.000
## 70    North     Uttar Pradesh           Mirzapur   4881.000
## 71     West       Maharashtra             Mumbai  15296.879
## 72    North     Uttar Pradesh      Muzaffarnagar   5578.600
## 73    South         Karnataka             Mysore  14203.000
## 74    South        Tamil Nadu          Nagercoil   6365.000
## 75     West       Maharashtra             Nagpur         NA
## 76     West       Maharashtra             Nashik   9597.646
## 77     West       Maharashtra        Navi Mumbai   4423.834
## 78    North             Delhi          New Delhi   2660.000
## 79    North     Uttar Pradesh              Noida   8228.600
## 80     East       West Bengal       North Dumdum   9514.733
## 81    North         Rajasthan               Pali   5118.500
## 82     East       West Bengal           Panihati   6923.003
## 83     East             Bihar              Patna  11568.565
## 84     West       Maharashtra   Pimpri-Chinchwad         NA
## 85    South        Puducherry         Puducherry  28015.000
## 86     East             Bihar             Purnia   7334.000
## 87    South         Karnataka            Raichur   7284.200
## 88    North      Chhattisgarh             Raipur   3866.000
## 89     West           Gujarat             Rajkot  19370.660
## 90     East       West Bengal    Rajpur Sonarpur   1083.000
## 91    North     Uttar Pradesh             Rampur   9923.797
## 92     East         Jharkhand             Ranchi   7085.625
## 93    North    Madhya Pradesh               Rewa  30537.200
## 94    North     Uttar Pradesh         Saharanpur  28426.250
## 95    South        Tamil Nadu              Salem  31030.300
## 96    North    Madhya Pradesh              Satna  16261.000
## 97    North         Rajasthan              Sikar  14664.000
## 98     East       West Bengal           Siliguri  10379.000
## 99    North           Haryana            Sonipat  16375.000
## 100   North         Rajasthan     Sri Ganganagar  31467.001
## 101   North Jammu and Kashmir           Srinagar   6099.000
## 102    West           Gujarat              Surat         NA
## 103    West       Maharashtra              Thane  37062.354
## 104   South            Kerala Thiruvananthapuram   6426.800
## 105   South        Tamil Nadu        Thoothukudi  52357.700
## 106   South            Kerala           Thrissur  10600.000
## 107   South        Tamil Nadu        Tirunelveli   4271.001
## 108   South    Andhra Pradesh           Tirupati   9250.000
## 109   South        Tamil Nadu       Tiruvottiyur  14933.999
## 110    West       Maharashtra         Ulhasnagar   7084.000
## 111    West           Gujarat           Vadodara         NA
## 112    West       Maharashtra        Vasai-Virar   7162.520
## 113   South    Andhra Pradesh         Vijayawada  24670.100
## 114   South    Andhra Pradesh      Visakhapatnam  11135.138
## 115   South    Andhra Pradesh       Vizianagaram  23042.600
## 116   South         Telangana           Warangal  10040.501


Calculating count of Customers,Average no of Purchases by group
#Method:I
by.goup <- group_by(cust_dat,Last_city,Last_state)
sum.group <- summarise(by.goup,count = n(),avgnopur = mean(buy.times,na.rm = TRUE),avgpurtrans = mean(avg_rev_trip,na.rm = TRUE))
sum.group
## Source: local data frame [116 x 5]
## Groups: Last_city [?]
## 
##     Last_city    Last_state count  avgnopur avgpurtrans
##        (fctr)        (fctr) (int)     (dbl)       (dbl)
## 1    Agartala       Tripura     3  5.333333   1350.5370
## 2        Agra Uttar Pradesh    13 12.307692   1850.0183
## 3   Ahmedabad       Gujarat   621  5.661836   2028.1787
## 4     Aligarh Uttar Pradesh     9  4.000000    889.8111
## 5   Allahabad Uttar Pradesh     2  3.500000    803.2958
## 6    Ambattur    Tamil Nadu    10  5.400000   1097.8639
## 7   Ambernath   Maharashtra     1  5.000000    967.0598
## 8     Asansol   West Bengal     1  3.000000   1264.6667
## 9  Aurangabad   Maharashtra     4 10.750000   1226.9933
## 10  Bangalore     Karnataka   631  5.077655   2285.0311
## ..        ...           ...   ...       ...         ...


#Method:II
install.packages("dplyr")
## Installing package into 'C:/Users/ASUTOSH/Documents/R/win-library/3.2'
## (as 'lib' is unspecified)
## Warning: package 'dplyr' is in use and will not be installed
require(dplyr)
cust<-mutate(cust_dat1, avg_rev_trip = Customer.Value/buy.times, balance_points = Points.earned-Points.redeemed )

by_group<- group_by(cust, Last_state, Last_city)

Summarized_data <- summarise(by_group, count = n(), dist = mean(buy.times, na.rm = TRUE), delay = mean(avg_rev_trip, na.rm = TRUE))
Summarized_data
## Source: local data frame [116 x 5]
## Groups: Last_state [?]
## 
##        Last_state     Last_city count      dist     delay
##            (fctr)        (fctr) (int)     (dbl)     (dbl)
## 1  Andhra Pradesh        Guntur     1  3.000000    0.0000
## 2  Andhra Pradesh       Kurnool     1  4.000000  778.3747
## 3  Andhra Pradesh      Tirupati     2  6.000000 1828.3333
## 4  Andhra Pradesh    Vijayawada    20 10.100000 1981.1912
## 5  Andhra Pradesh Visakhapatnam   117  4.666667 2383.9146
## 6  Andhra Pradesh  Vizianagaram     1 12.000000 1920.2167
## 7           Assam      Guwahati    30 27.766667 1454.0175
## 8           Bihar     Begusarai     1  9.000000 2855.3332
## 9           Bihar     Bhagalpur     1  3.000000  929.2663
## 10          Bihar       Katihar     2 11.500000 1847.9000
## ..            ...           ...   ...       ...       ...
